{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpenseFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","updateExpense","hide","useState","title","setTitle","amount","setAmount","date","setDate","onSubmit","event","preventDefault","data","id","Math","random","Date","className","placeholder","required","type","value","onChange","target","min","step","max","onClick","NewExpense","showExpense","setShowExpense","ExpenseDate","month","toLocaleString","day","year","getFullYear","Card","classes","children","ExpenseItem","ExpensesFilter","expenseFilterHandler","parseInt","ChartBar","height","label","style","Chart","dataPoints","map","Expenses","initialDataPoints","expenses","setYear","maxAmount","filteredExpenses","filter","element","getMonth","ExpenseItems","length","expensesInitial","App","setExpenses","previous","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.909555de.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const { updateExpense, hide } = props;\r\n  const [title, setTitle] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n\r\n  const reset = () => {\r\n    setTitle(\"\");\r\n    setAmount(0);\r\n    setDate(\"\");\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const data = {\r\n      id: Math.random(),\r\n      title,\r\n      amount,\r\n      date: new Date(date),\r\n    };\r\n    updateExpense(data);\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            placeholder=\"Please Enter a Title\"\r\n            required\r\n            type=\"text\"\r\n            value={title}\r\n            onChange={(event) => setTitle(event.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            placeholder=\"Please Enter the amount\"\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={amount}\r\n            onChange={(event) => setAmount(event.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={date}\r\n            onChange={(event) => setDate(event.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"submit\">Add Expense</button>\r\n        <button type=\"button\" onClick={hide}>\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\n\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [showExpense, setShowExpense] = useState(true);\r\n\r\n  const show = () => setShowExpense(true);\r\n  const hide = () => setShowExpense(false);\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!showExpense && <button onClick={show}>Add New Expense</button>}\r\n      {showExpense && <ExpenseForm {...props} hide={hide} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React from \"react\";\r\n\r\nimport \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import React from \"react\";\r\n\r\nimport \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  const classes = \"card \" + props.className;\r\n\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date} />\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">${props.amount}</div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\n\r\nimport \"./ExpenseFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const { expenseFilterHandler } = props;\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select\r\n          onChange={(event) =>\r\n            expenseFilterHandler(parseInt(event.target.value))\r\n          }\r\n        >\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from \"react\";\r\n\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  const { height, label } = props;\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div style={{ height: height }} className=\"chart-bar__fill\"></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\n\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n  const { dataPoints } = props;\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {dataPoints.map(({ height, label }) => (\r\n        <ChartBar key={Math.random()} height={height} label={label} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState } from \"react\";\r\n\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./Expenses.css\";\r\nimport ExpensesFilter from \"./ExpenseFilter\";\r\nimport Chart from \"./../Chart/Chart\";\r\n\r\nconst Expenses = (props) => {\r\n  const initialDataPoints = [\r\n    {\r\n      label: \"Jan\",\r\n      height: 0,\r\n    },\r\n    {\r\n      label: \"Feb\",\r\n      height: 0,\r\n    },\r\n    {\r\n      label: \"Mar\",\r\n      height: 0,\r\n    },\r\n    {\r\n      label: \"Apr\",\r\n      height: 0,\r\n    },\r\n    {\r\n      label: \"May\",\r\n      height: 0,\r\n    },\r\n    {\r\n      label: \"Jun\",\r\n      height: 0,\r\n    },\r\n    {\r\n      label: \"Jul\",\r\n      height: 0,\r\n    },\r\n    {\r\n      label: \"Aug\",\r\n      height: 0,\r\n    },\r\n    {\r\n      label: \"Sep\",\r\n      height: 0,\r\n    },\r\n    {\r\n      label: \"Oct\",\r\n      height: 0,\r\n    },\r\n    {\r\n      label: \"Nov\",\r\n      height: 0,\r\n    },\r\n    {\r\n      label: \"Dec\",\r\n      height: 0,\r\n    },\r\n  ];\r\n\r\n  const { expenses } = props;\r\n  const [year, setYear] = useState(2022);\r\n  const expenseFilterHandler = (year) => {\r\n    setYear(year);\r\n  };\r\n\r\n  let maxAmount = 0;\r\n  const filteredExpenses = expenses.filter((element) => {\r\n    if (element.date.getFullYear() === year) {\r\n      maxAmount = maxAmount + element.amount;\r\n      return element.date.getFullYear();\r\n    }\r\n    return null;\r\n  });\r\n\r\n  filteredExpenses.map((element) => {\r\n    const month = element.date.getMonth();\r\n    const height = +(element.amount / maxAmount) * 100;\r\n    initialDataPoints[month].height = initialDataPoints[month].height + height;\r\n    return null;\r\n  });\r\n\r\n  let ExpenseItems = <p className=\"center-text\">Found No Expense</p>;\r\n  if (filteredExpenses.length > 0) {\r\n    ExpenseItems = filteredExpenses.map((element) => (\r\n      <ExpenseItem\r\n        key={element.id}\r\n        title={element.title}\r\n        amount={element.amount}\r\n        date={element.date}\r\n      />\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Chart dataPoints={initialDataPoints}></Chart>\r\n      <ExpensesFilter\r\n        expenseFilterHandler={expenseFilterHandler}\r\n      ></ExpensesFilter>\r\n      <Card className=\"expenses\">{ExpenseItems}</Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from 'react';\nimport NewExpense from './components/NewExpense/NewExpense'\nimport Expenses from './components/Expenses/Expenses';\n\nconst expensesInitial = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n]; \n\nconst App = () => {\n\n\n  const [expenses, setExpenses] = useState(expensesInitial);\n\n  const updateExpense = (data) => {\n    setExpenses(previous => {return [...previous , data]});\n  }\n\n  return (\n    <div>\n      <NewExpense updateExpense={updateExpense}/>\n      <Expenses expenses={expenses} />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);"],"sourceRoot":""}